const { Sequelize, DataTypes } = require('sequelize');

const sequelize = new Sequelize('crud_orm', 'root', '', {
    host: '127.0.0.1',
    dialect: 'mysql',
});

//testando a conexão
const testConnection = async () => {
    try {
        await sequelize.authenticate();
        console.log("Conexão bem-sucedida!");
    } catch (error) {
        console.error("Erro ao conectar:", error);
    }
};

//criação da tabela
const Usuario = sequelize.define('Usuario', {
    id: {
        type: DataTypes.INTEGER,
        primaryKey: true,
        autoIncrement: true,
    },
    nome: {
        type: DataTypes.STRING(100),
        allowNull: false,
    },
    email: {
        type: DataTypes.STRING(100),
        allowNull: false,
        unique: true,
    },
}, {
    tableName: 'usuarios',
    timestamps: false,
});

//CRUD
const adicionarUsuario = async (nome, email) => {
    const novoUsuario = await Usuario.create({ nome, email });
    return novoUsuario;
};

const listarUsuarios = async () => {
    const usuarios = await Usuario.findAll();
    return usuarios;
};

const atualizarUsuario = async (id, nome, email) => {
    const usuario = await Usuario.findByPk(id);
    if (usuario) {
        if (nome) usuario.nome = nome;
        if (email) usuario.email = email;
        await usuario.save();
        return usuario;
    }
    return null;
};

const deletarUsuario = async (id) => {
    const usuario = await Usuario.findByPk(id);
    if (usuario) {
        await usuario.destroy();
    }
};

//execução do crud
const main = async () => {
    await testConnection();
    await sequelize.sync(); 

    await adicionarUsuario("Xulia", "julia@gmail.com");
    const usuarios = await listarUsuarios();
    console.log("Usuários:", usuarios);

    await atualizarUsuario(1, 'Julia', null);
    await deletarUsuario(1);
};

main().catch(error => console.error(error));
